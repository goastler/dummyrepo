# name: bump

# on:
#   push:
#     branches:
#       - main

# env:
#   GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# jobs:
#   a:
#     runs-on: ubuntu-latest
#     steps:

#       - name: git author
#         run: |
        
#           git config --global user.email "goastler4@gmail.com"
#           git config --global user.name "goastler"

#       - name: Checkout repository
#         uses: actions/checkout@v3
#         with:
#           ssh-key: ${{ secrets.KEY }}
#           fetch-depth: 0

#       - run: npm ci

#       # - name: optionally bump workspace
#       #   run: |

#       #     # if there are changesets, then we need to bump the workspace
#       #     if [ -z "$(ls -A .nx/version-plans || true)" ]; then
#       #       echo "No changesets"
#       #       exit 0
#       #     fi
          
#       #     # changesets exist
#       #     echo "Changesets detected, patching workspace"
#       #     pkg=$(cat package.json | jq -r ".name")
#       #     # always include a workspace patch bump to ensure changes to members of the workspace result in a workspace bump of at least patch
#       #     printf -- "---\n'$pkg': patch\n---\nworkspace member bumped\n" > .nx/version-plans/workspace-$(date +%s).json

#       - name: version
#         run: |

#           npx nx release version
#           npm i

#       - name: remove version plans
#         run: |
        
#           rm -v .nx/version-plans/* || true

#       - name: pr
#         run: |

#           set -x
#           sourceBranch=${GITHUB_REF#refs/heads/}
#           destBranch="release/$sourceBranch"
#           # switch to the branch, creating if it doesn't exist
#           git checkout -b $destBranch
#           # commit the version bump
#           git add .
#           git commit -m "chore: release"
#           # pr into source branch
#           # if this fails it's likely the branch already exists on the remote due to an unmerged release pr
#           # either:
#           # - (preferred) merge the existing pr, which will trigger this workflow to run again and handle further version bumps
#           # - (only if necessary) delete the branch on gh and re-run this workflow manually
#           git push --set-upstream origin $destBranch
#           echo pr to $sourceBranch
#           gh pr create --fill --base $sourceBranch

