name: bump

on:
  push:
    branches:
      - main

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  a:
    runs-on: ubuntu-latest
    steps:

      - name: git author
        run: |
        
          git config --global user.email "goastler4@gmail.com"
          git config --global user.name "goastler"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.KEY }}

      - run: git fetch origin ${{ github.event.before }}

      - run: npm ci

      # - name: optionally bump workspace
      #   run: |

      #     # if there are changesets, then we need to bump the workspace
      #     if [ -z "$(ls -A .nx/version-plans || true)" ]; then
      #       echo "No changesets"
      #       exit 0
      #     fi
          
      #     # changesets exist
      #     echo "Changesets detected, patching workspace"
      #     pkg=$(cat package.json | jq -r ".name")
      #     # always include a workspace patch bump to ensure changes to members of the workspace result in a workspace bump of at least patch
      #     printf -- "---\n'$pkg': patch\n---\nworkspace member bumped\n" > .nx/version-plans/workspace-$(date +%s).json

      - name: version
        run: |

          npx nx release version
          npm i

      - name: remove version plans
        run: |
        
          rm -v .nx/version-plans/* || true

      - name: commit
        run: |

          if git diff --quiet; then
            echo "No changes"
            exit 0
          else
            version=$(cat package.json | jq -r ".version")
            # push to a branch for version bumping
            # note that the branch name is based on the source branch to prevent parallel version bumps
            # thus pushing may error if the branch already exists due to an open pr
            # resolve the open pr, which should merge into the source branch, triggering this workflow again and handling the further version bump(s)
            branchName="release/${GITHUB_REF#refs/heads/}"
            git add .
            git checkout -b $branchName
            git commit -m "chore: release $version"
            git push origin $branchName
            echo pr to ${GITHUB_REF#refs/heads/}
            gh pr create --fill --base ${GITHUB_REF#refs/heads/}
          fi

