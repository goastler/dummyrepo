# process changesets to bump package versions, then pr them back into the branch

name: release

on:
    push:
        branches: # on push to these branches
            - main
            - build/*
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: false # queue the new runs until previous have finished. This avoids version bumps overlapping with each other

defaults:
    run:
        shell: bash

jobs:
    version:
        name: version
        runs-on: ubuntu-latest
        steps:
            - name: Print contexts
              uses: prosopo/captcha/.github/actions/print_contexts@gha
              with:
                    INPUTS_CONTEXT: ${{ toJson(inputs) }}
                    NEEDS_CONTEXT: ${{ toJson(needs) }}
                    VARS_CONTEXT: ${{ toJson(vars) }}
                    SECRETS_CONTEXT: ${{ toJson(secrets) }}
        
            - name: Authenticate GitHub CLI
              run: echo "${{ secrets.PROSOPONATOR_PAT }}" | gh auth login --with-token

            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  token: ${{ secrets.PROSOPONATOR_PAT }}
                  fetch-depth: 0 # fetch all history

            - name: git config
              run: |
                set -x
                git config user.name "prosoponator[bot]"
                git config user.email "dev@prosopo.io"

            - name: apply changesets
              if: env.changesets_exit_code == '0'
              run: |
                # apply changesets to bump package versions
                npm run changesets:version

            - name: Set up SSH
              run: |
                mkdir -p ~/.ssh
                chmod 700 ~/.ssh
                echo "${{ secrets.PROSOPONATOR_DEPLOY_KEY }}" > ~/.ssh/id
                chmod 600 ~/.ssh/id

            - name: push changes
              if: env.changesets_exit_code == '0'
              run: |
                git add .
                git commit -m "version bump"
                GIT_SSH_COMMAND="ssh -i ~/.ssh/id -o StrictHostKeyChecking=no -o IdentitiesOnly=yes" git push

