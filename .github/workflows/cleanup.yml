name: Cleanup NPM Releases

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Name of the tag to clean up'
        required: true
        type: string

jobs:
    cleanup-npm-releases:
        # if: github.event.pull_request.merged == true || github.event.pull_request.state == 'closed'
        runs-on: ubuntu-latest
        steps:

            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  token: ${{ steps.app_token.outputs.token }}
                  fetch-depth: 0 # fetch all history

            - name: Get safe branch name
              id: branch
              run: |
                branch="${{ github.event.pull_request.head.ref }}"
                safe_branch_name=$(echo "$branch" | tr '/\\:;*?"<>|@#%&=+,$' '-')
                echo "safe_branch_name=$safe_branch_name" >> $GITHUB_ENV

            - name: auth gh cli
              run: |
                gh auth login --with-token < <(echo "${{ secrets.PROSOPONATOR_PAT }}")
                gh auth status

            - name: purge gh pkgs
              run: |
                pkgs=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "/orgs/${{ github.repo }}/packages?package_type=npm&per_page=100" | jq -r '.[].name')
                for pkg in $pkgs; do
                  echo "Package: $pkg"
                  versions=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "/orgs/${{ github.repository_owner }}/packages/npm/$pkg/versions?per_page=100" | jq -r '.[].name')
                  for version in $versions; do
                    if [[ "$version" =~ -${{ env.safe_branch_name }}\.[0-9]+$ ]]; then
                      echo "Deleting $pair"
                      gh api -X DELETE -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "/orgs/${{ github.repository_owner }}/packages/npm/$pkg/versions/$version"
                    fi
                  done
                done

            - name: purge tags
              run: |
                git fetch --tags
                tags=$(git tag | grep -E '-${{ env.safe_branch_name }}\.[0-9]+')
                echo "matching tags:"
                echo "$tags"
                for tag in $tags; do
                  echo "Deleting tag: $tag"
                  git tag -d "$tag"
                  git push --delete origin "$tag"
                done

